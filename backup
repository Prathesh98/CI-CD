pipeline {
  agent {
    label "Java"
  }
  
  environment {
    EMAIL_RECIPIENTS = 'pratheshyadav67@gmail.com'
    PATH = "/opt/apache-maven-3.9.2/bin:${PATH}"
    NEXUS_URL = 'http://13.201.0.144:8081/repository/snapshotnew/'
    NEXUS_CREDENTIALS = credentials('nexus-ssh') // Jenkins credentials for Nexus
    GROUP_ID = 'com.maven'
    ARTIFACT_ID = 'SimpleWebApplication'
    VERSION = '9.1.14-SNAPSHOT'
    WAR_FILE_NAME = "SimpleWebApplication.war"
    //WAR_FILE_NAME = "${ARTIFACT_ID}-${VERSION}.war"
    TOMCAT_CREDENTIALS = credentials('tomcat_server')
    TOMCAT_URL = 'http://43.204.147.117:8080/'
    TOMCAT_WEBAPPS_DIR = '/home/tomcat/apache-tomcat-10.1.30/webapps' // Define your Tomcat webapps directory here
    WORKSPACE = '/home/tomcat/jenkins/workspace/Assignment_2'
    NEXUSUSER_NAME = 'admin'
    NEXUS_PASSWORD = 'admin'
  }
  
  stages {
    stage('Build') {
      steps {
        sh 'mvn clean install'
      }
    }

    stage('Jacoco') {
      steps {
        jacoco()
      }
    }

    stage('SonarQube Analysis') {
      steps {
        script {
          def scannerHome = tool 'scanner_sonar'
          withSonarQubeEnv('jenkins-sonar') {
            sh """
              ${scannerHome}/bin/sonar-scanner \
              -Dsonar.projectKey=javawebappproject \
              -Dsonar.projectName=javawebappproject \
              -Dsonar.projectVersion=1.0 \
              -Dsonar.java.binaries='target/classes'
            """
          }
        }
      }
    }
/*
    stage("Sonar Quality Gate Check") {
      steps {
        timeout(time: 1, unit: 'HOURS') {
          script {
            def qualityGate = waitForQualityGate()
            if (qualityGate.status != 'OK') {
              error "Pipeline aborted due to quality gate failure: ${qualityGate.status}"
            }
          }
        }
      }
    }
*/
    stage('Upload to Nexus') {
      steps {
        nexusArtifactUploader artifacts: [[
          artifactId: 'SimpleWebApplication', 
          classifier: '', 
          file: 'target/SimpleWebApplication.war', 
          type: 'war'
        ]], 
        credentialsId: 'nexus-ssh', 
        groupId: 'com.maven', 
        nexusUrl: '13.201.0.144:8081', // Ensure protocol is included
        nexusVersion: 'nexus3', 
        protocol: 'http', 
        repository: 'snapshotnew', 
        version: '9.1.14'
      }
    }
/*    
    stage('Deploy WAR from Nexus to Tomcat') {
      agent {
        label "Tomcat"
      }
      steps {
        script {
          // Download the WAR from Nexus
          sh """
curl -u ${NEXUSUSER_NAME}:${NEXUS_PASSWORD} -O ${NEXUS_URL}${WAR_FILE_NAME}
"""
}
}
}
*/
stage('Deploy WAR to Tomcat') {
          agent {
              label "Tomcat"
                }
           steps {
              // withCredentials([usernamePassword(credentialsId: 'tomcat_server', usernameVariable: 'hostmanager', passwordVariable: 'hostmanager1')]) {
                   script {
                       // Deploy the WAR file to Tomcat using Tomcat Manager API
                       sh """
                       sudo systemctl stop tomcat
                     /*  mv ${TOMCAT_WEBAPPS_DIR}/*.war /home/tomcat/apache-tomcat-10.1.30/webapps  */
                       cp -r ${WAR_FILE_NAME} ${TOMCAT_WEBAPPS_DIR}
                       sudo systemctl start tomcat
                     //  #curl -u hostmanager:hostmanager1 --upload-file ${WAR_FILE_NAME} ${TOMCAT_URL}=/.&update=true
                       """
                   }
               }
           }

       }
      }

