pipeline {
  agent {
    label "java"
  }
  
  environment {
    EMAIL_RECIPIENTS = 'pramodprasanna17@gmail.com'
    PATH = "/opt/apache-maven-3.9.2/bin:${PATH}"
    NEXUS_URL = 'http://54.209.128.178:8081/repository/snapshotnew/'
    NEXUS_CREDENTIALS = credentials('jenkins-nexus') // Jenkins credentials for Nexus
    GROUP_ID = 'com/maven'
    ARTIFACT_ID = 'SimpleWebApplication'
    VERSION = '9.1.14-SNAPSHOT'
    WAR_FILE_NAME = "${ARTIFACT_ID}-${VERSION}.war"
    TOMCAT_CREDENTIALS = credentials('jenkinstomcatmanager')
    TOMCAT_URL = 'http://54.88.142.55:8080/'
    TOMCAT_WEBAPPS_DIR = '/opt/tomcat/apache-tomcat-10.1.30/webapps'
  }
  
  stages {
    stage('Build') {
      steps {
        sh 'mvn clean install'
      }
    }

    stage('jacoco') {
      steps {
        jacoco()
      }
    }

    stage('SonarQube analysis') {
      steps {
        script {
          def scannerHome = tool 'sonarqubescanner'
          withSonarQubeEnv('sonarqube') {
            sh """
              ${scannerHome}/bin/sonar-scanner \
              -Dsonar.projectKey=javawebappproject \
              -Dsonar.projectName=javawebappproject \
              -Dsonar.projectVersion=1.0 \
              -Dsonar.java.binaries='target/classes'
            """
          }
        }
      }
    }

    stage("Sonar Quality Gate Check") {
      steps {
        timeout(time: 1, unit: 'MINUTES') {
          script {
            def qualityGate = waitForQualityGate()
            if (qualityGate.status != 'OK') {
              error "Pipeline aborted due to quality gate failure: ${qualityGate.status}"
            }
          }
        } // End of timeout
      }
    }

    stage('Upload to Nexus') {
      steps {
        nexusArtifactUploader artifacts: [[artifactId: 'SimpleWebApplication', classifier: '', file: 'target/SimpleWebApplication.war', type: 'war']], credentialsId: 'jenkins-nexus', groupId: 'com.maven', nexusUrl: '54.209.128.178:8081', nexusVersion: 'nexus3', protocol: 'http', repository: 'snapshotnew', version: '9.1.14-SNAPSHOT'
      }
    }
    
    stage('Deploy WAR from Nexus to Tomcat') {
      agent {
        label "tomcat"
      }
      steps {
        script {
          // Download the WAR from Nexus
          def downloadedWarName = "${ARTIFACT_ID}-${VERSION}-*-*.war"
          sh """
          wget --user=${NEXUS_CREDENTIALS_USR} --password=${NEXUS_CREDENTIALS_PSW} \
          ${NEXUS_URL}${GROUP_ID}/${ARTIFACT_ID}/${VERSION}/${WAR_FILE_NAME} \
          -O ${WORKSPACE}/${WAR_FILE_NAME}
          """
        }
       // Check if the WAR was downloaded successfully
                script {
                    if (!fileExists("${WORKSPACE}/${WAR_FILE_NAME}")) {
                        error "Failed to download the WAR file from Nexus."
                    }
                }
        // Deploy the WAR file directly to the Tomcat webapps directory
                sh """
                cp -R ${WORKSPACE}/${WAR_FILE_NAME} ${TOMCAT_WEBAPPS_DIR}
                """
                
                // Optional: Trigger Tomcat to deploy the WAR file using curl (if Tomcat manager is configured)
                /*
                sh """
                curl --user ${TOMCAT_CREDENTIALS_USR}:${TOMCAT_CREDENTIALS_PSW} \
                --upload-file ${WORKSPACE}/${WAR_FILE_NAME} \
                ${TOMCAT_URL}/manager/text/deploy?path=/SimpleWebApplication&update=true
                """
                */

        // Deploy to Tomcat using the downloaded WAR
        deploy adapters: [tomcat9(credentialsId: 'tomcat-password', 
                                  url: "${TOMCAT_URL}")], 
               contextPath: 'SimpleWebApplication', 
               onFailure: false, 
               war: "${WORKSPACE}/${WAR_FILE_NAME}"
      }
    }
  }

  post {
    failure {
      script {
        mail (to: 'pramodprasanna17@gmail.com',
              subject: "Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) failed",
              body: "Please visit ${env.BUILD_URL} for further information"
        )
      }
    }
    success {
      script {
        mail (to: 'pramodprasanna17@gmail.com', 
              subject: "Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) succeeded.",
              body: "Please visit ${env.BUILD_URL} for further information."
        )
      }
    }
  }
}
